{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACXuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;ACJxB;;;;AAOM,MAAOC,YAAP,CAAmB;AAGvBC,cAAoBC,UAApB,EAA0C;AAAtB;AAFpB,iBAAQ,wBAAR;AAE8C;AAE9C;;;;;;;;AAOOC,WAAS;AAChB,WAAO,KAAKD,UAAL,CAAgBE,GAAhB,CAAoB,MAApB,EACJC,IADI,CAEHN,mDAAG,EAAE;AACL;AACEO,UAAI,EAAGC,IAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CADxB;AAEEG,WAAK,EAAGA,KAAD,IAAgBF,OAAO,CAACC,GAAR,CAAY,WAAUC,KAAtB;AAFzB,KADG,CAFA,CAAP;AASC;;AAtBsB;;;mBAAZV,cAAYW,+DAAAA,CAAAA,4DAAAA;AAAA;;;QAAZX;AAAYY;AAAAC;AAAAC;AAAAC;AAAA;ACVzBJ,MAAAA,4DAAAA;AACEA,MAAAA,oDAAAA;;AACFA,MAAAA,0DAAAA;;;;AADEA,MAAAA,uDAAAA;AAAAA,MAAAA,gEAAAA,MAAAA,yDAAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACAwD;AAEF;AACT;AAES;;AAcjD,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YALJ;YACP,oEAAa;YACb,iEAAgB;YAChB,kEAAgB;SACjB;mIAIU,SAAS,mBAVlB,wDAAY,aAGZ,oEAAa;QACb,iEAAgB;QAChB,kEAAgB;;;;;;;;;;;;;;;;ACfpB,gFAAgF;AAChF,mEAAmE;AACnE,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-tour-of-heroes';\n\n  constructor(private httpClient: HttpClient) {}\n  \n  /*\n  getConfig() : Observable<any> {\n    // now returns an Observable of Config\n    return this.httpClient.get('/api');\n  }\n  */\n\n  public getConfig() : Observable<any> {\n  return this.httpClient.get('/api')\n    .pipe(\n      tap( // Log the result or error\n      {\n        next: (data : any) => console.log(data),\n        error: (error: any) => console.log(\"ERRROR\"+ error)\n      }\n      )\n    );\n  }\n}\n","<div>\n  {{getConfig()|async}}\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["tap","AppComponent","constructor","httpClient","getConfig","get","pipe","next","data","console","log","error","i0","selectors","decls","vars","template"],"sourceRoot":"webpack:///"}